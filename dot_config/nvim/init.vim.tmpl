syntax enable
colorscheme gruvbox

set number relativenumber       "Line numbers relative to the present line
set colorcolumn=88
set cursorline
set scrolloff=5
set spell spelllang=en_gb
" set signcolumn=yes
let g:mapleader=" "
let g:maplocalleader=" "

" using soft tabs
set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4

set backup		" keep a backup file (restore to previous version)
if has('persistent_undo')
    set undofile	" keep an undo file (undo changes after closing)
endif
set undodir=$XDG_CONFIG_HOME/nvim/.undo//
set directory=$XDG_CONFIG_HOME/nvim/.swp//
set backupdir=$XDG_CONFIG_HOME/nvim/.backup//

if has("autocmd")
    filetype plugin on
    filetype plugin indent on
    autocmd BufWritePre * %s/\s\+$//e  " remove trailing whitespaces on save
    autocmd BufWritePre *.py %s/\n\n# In\[[0-9]\+]:\n\n//e  " remove IPython breadcrumbs
    autocmd BufWritePre *.py execute ':Black'
    autocmd BufWritePre *.ledger execute ':%LedgerAlign'
    autocmd BufWritePre journal.ledger execute ':LedgerSort'
    autocmd BufWritePost *sxhkdrc !killall sxhkd; setsid sxhkd &
    autocmd BufWritePost *.config/polybar/*conf* !~/.config/polybar/launch.sh
	" enter insert mode whenever we're in a terminal
	autocmd TermOpen,BufWinEnter,BufEnter term://* startinsert
endif

call plug#begin('~/.vim/plugged')

    " general
    {{- if eq .chezmoi.hostname "p180380" }}
    Plug '~/soft/fzf/'
    {{- end }}
    Plug 'junegunn/fzf.vim'
    Plug 'itchyny/lightline.vim'
    Plug 'tpope/vim-commentary'
    Plug 'tpope/vim-fugitive'
    Plug 'tpope/vim-surround'
    Plug 'jpalardy/vim-slime', {'branch': 'main'}
    Plug 'ervandew/supertab'
    Plug 'jiangmiao/auto-pairs'


    " language
    " Plug 'neoclide/coc.nvim', {'branch': 'release'}
    Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
    Plug 'deoplete-plugins/deoplete-jedi'
    Plug 'dense-analysis/ale'
    Plug 'vim-pandoc/vim-pandoc'
    Plug 'vim-pandoc/vim-pandoc-syntax'

    " python
    Plug 'psf/black'
    Plug 'plytophogy/vim-virtualenv'

    " syntax highlight
    Plug 'mechatroner/rainbow_csv'
    Plug 'ledger/vim-ledger'
    Plug 'kovetskiy/sxhkd-vim'
call plug#end()

" Mappings
nnoremap <C-h> <C-w><C-h>
nnoremap <C-j> <C-w><C-j>
nnoremap <C-k> <C-w><C-k>
nnoremap <C-l> <C-w><C-l>
" Copy full path to system register
nmap <leader>cfp :let @+ = expand("%:p")<CR>
noremap <F4> :set hlsearch! hlsearch?<CR>
noremap <F5> :set spell! spell?<CR>
" fzf
nnoremap <leader>fg :GFiles<CR>
nnoremap <leader>fr :Rg<CR>
nnoremap <Leader>fw :Rg <C-R><C-W><CR>
" lightline
let g:lightline = {
      \ 'colorscheme': 'seoul256',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ],
      \             [ 'venv' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'FugitiveHead',
      \   'venv': 'virtualenv#statusline'
      \ },
      \ }

" vim-ledger
let g:ledger_default_commodity="EUR"
let g:ledger_commodity_sep=" "
" vim-slime
let g:slime_target = "neovim"
nnoremap <leader>ip :split term://ipython<CR>
" terminal
tnoremap <ESC> <C-\><C-n>
tnoremap <C-h> <C-\><C-n><C-h>
tnoremap <C-j> <C-\><C-n><C-j>
tnoremap <C-k> <C-\><C-n><C-k>
tnoremap <C-l> <C-\><C-n><C-l>
nnoremap <C-h> <C-w><C-h>
nnoremap <C-j> <C-w><C-j>
nnoremap <C-k> <C-w><C-k>
nnoremap <C-l> <C-w><C-l>

" python3 provider
let g:python3_host_prog = "/usr/bin/python3"
let g:slime_python_ipython = 1

" pandoc
let g:pandoc#formatting#mode = "hA"
let g:pandoc#formatting#smart_autoformat_on_cursormoved = 1
" let g:pandoc#completion#bib#mode = 'citeproc' " deprecated, cannot use

" deoplete
let g:deoplete#enable_at_startup = 1
call deoplete#custom#var('omni', 'input_patterns', {
\ 'pandoc': '@\w*'
\})

" supertab
let g:SuperTabDefaultCompletionType = "<c-n>" " select top-down, not bottom-up
function LedgerSort()
    :%!hledger -f - print
    :%LedgerAlign
endfunction
command LedgerSort call LedgerSort()
